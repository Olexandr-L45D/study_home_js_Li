// –ü–†–ê–ö–¢–ò–ö–ê –∑ 8 -–≥–æ –ú–æ–¥—É–ª—è (–±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏, –º–µ—Ç–æ–¥–∏ loading="lazy", *Throttle -–ø–æ–≤—ñ–ª—å–Ω–µ(–∑ —Ü–∏–∫–ª–∞–º–∏ –ø—Ä–µ—Ä–∏–≤–∞–Ω–Ω—è)
//  —Ç–∞ Debounce* - –≤–∏–≤–æ–¥–µ —á–µ—Ä–µ–∑ –≤–∫–∞–∑–∞–Ω–∏–π –ø—Ä–æ–º—ñ–∂–æ–∫ —á–∞—Å—É –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö –ú–∞—é—Ç—å –æ—Å–æ–±–ª–∏–≤–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∑–∞–ø–∏—Å—É —Ç–∞–∫ —è–∫ —Ü–µ –º–µ—Ç–æ–¥–∏ –∑
// –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ :npm/lodash@4.17.21/lodash.min.js". –ü—Ä–∏–∫–ª–∞–¥ –∑–∞–ø–∏—Å—É –∑ –ê–ù–î–ï–†–°–ö–û–†–û–ú: inputRef.addEventListener('input', _.throttle(handlerSearch, 1000, )

// –ü—Ä–∏–∫–ª–∞–¥ –ª—ñ–Ω–∏–≤–æ–≥–æ(–ü–û–í–Ü–õ–¨–ù–û–ì–û) –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å (–∞ —Ç–∞–∫ —Å–∞–º–æ —ñ –≤—ñ–¥–µ–æ) –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç—É,
//  —è–∫–∏–π –º–∏ –¥–æ–¥–∞—î–º–æ –≤ —Ä–æ–∑–º—ñ—Ç–∫—É –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —ó—ó –≤ –î–ñ –° —Ñ–∞–π–ª—ñ –≤ —Ç–µ–≥—É —ñ–º–µ–¥–∂ –∞–±–æ 
// –∞–π—Ñ—Ä–µ–π–º: <iframe src"" framborder= "0" loading="lazy">(–¥–ª—è –≤—ñ–¥–µ–æ)
// –¥–ª—è —Ü—å–æ–≥–æ –≤—Å—Ç–∞–≤–ª—è—î–º–æ : loading="lazy"
// –¢–µ—Å—Ç–æ–≤–∏–π –º–∞—Å–∏–≤ –¥–ª—è lazy-loading
// const cats = [
//   "https://i.ytimg.com/vi/iKA6ZXpGcGQ/maxresdefault.jpg",
//   "https://i.natgeofe.com/n/46b07b5e-1264-42e1-ae4b-8a021226e2d0/domestic-cat_thumb_square.jpg",
//   "https://cdn.britannica.com/39/7139-050-A88818BB/Himalayan-chocolate-point.jpg",
//   "https://i.guim.co.uk/img/media/941093798b256e5d1aa6246a08824bc86f62a31f/0_0_5000_3000/master/5000.jpg?width=1300&quality=85&fit=max&s=ea672fb16df8634901283252059baaf8",
//   "https://nypost.com/wp-content/uploads/sites/2/2022/06/reddit-cats-judging-looks-00.jpg?quality=75&strip=all",
//   "https://gdb.voanews.com/09690000-0a00-0242-5408-08da76ebde16_cx0_cy3_cw99_w1200_r1.jpg",
//];
// const list = document.querySelector(".js-cats");
// const markup = cats
//   .map(
//     (src) => `
//    <li>
//     <img src="${src}" alt="cat" width="300" loading="lazy" />
//     <p>   Lorem ipsum dolor sit, amet consectetur adipisicing elit. Voluptatibus minus ullam totam sint ipsa reiciendis, accusamus voluptate neque, quia deleniti maxime, illum soluta error. Quam tenetur minima deleniti possimus explicabo.
//    Soluta non consequatur animi obcaecati deleniti assumenda! Culpa assumenda perspiciatis obcaecati reprehenderit odio explicabo deleniti praesentium, sapiente veritatis saepe quisquam temporibus quae distinctio doloremque ad autem maiores quia laboriosam magnam.
//    Rem, libero impedit quia sed ad id veniam explicabo iusto aut expedita eveniet asperiores illo porro officia non quidem quos modi tempora. Sunt, repudiandae dolorum dolores nulla fugiat sit temporibus.
//    Eligendi iste assumenda quod, obcaecati sint dolorem reprehenderit id a saepe adipisci eveniet rerum mollitia provident odio minima esse exercitationem quis repellat consectetur repudiandae sapiente voluptas necessitatibus. Exercitationem, dolor corporis?
//  </p>
//    </li>`
//   )
//   .join("");

//   list.insertAdjacentHTML('afterbegin', markup)
//   console.log(cats.length)
//
//
// *****************************Throttle & Debounce***************************** \\
// https://bundlephobia.com/

//const inputRef = document.querySelector(".js-search");

// inputRef.addEventListener('input', _.throttle(handlerSearch, 1000, {
//     leading: true,
//     trailing: false,
// }))
// function handlerSearch(evt){
//     console.log(evt.target.value)
// }

// console.log(_)

// inputRef.addEventListener(
//   "input",
//   _.debounce(handlerSearch, 1000, {
//     leading: true,
//     trailing: true,
//     maxWait: 400,
//   })
// );

// function handlerSearch(evt) {
//   console.log(evt.target.value);
// }
// ************************************–ü—Ä–∞–∫—Ç–∏–∫–∞************************************ \\

// –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≥—Ä—É —Ö—Ä–µ—Å—Ç–∏–∫–∏ –Ω—É–ª–∏–∫–∏.
// –í—ñ–¥–º–∞–ª—é–π —Ä–æ–∑–º—ñ—Ç–∫—É —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑ –∫–ª–∞—Å–æ–º "content", –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–ª—ñ—Ç–∏–Ω–∫–∏ –∑–∞—Å—Ç–æ—Å—É–π –∫–ª–∞—Å "item"
// –†–µ–∞–ª—ñ–∑—É–π –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π –Ω–∞ —ñ–≥—Ä–æ–≤–æ–º—É –ø–æ–ª—ñ –¥–ª—è –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Ö–æ–¥—É.
// –°–∫—Ä—ñ–ø—Ç –º–∞—î —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –≤–∏–∑–Ω–∞—á–∞—Ç–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—è –≥—Ä–∏ —Ç–∞ –≤–∏–≤–æ–¥–∏—Ç–∏ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø–µ—Ä–µ–º–æ–∂—Ü–µ–º (X/O)
// –î–ª—è —ñ—Å—Ç–æ—Ä—ñ—ó —Ö–æ–¥—ñ–≤ –Ω–∞—à–∏—Ö –≥—Ä–∞–≤—Ü—ñ–≤ (–•/–û) –ø–æ—Ç—Ä—ñ–±–Ω–æ —â–æ–± –∫–æ–∂–Ω–∞ –∫–ª—ñ—Ç–∏–Ω–∫–∞ —ñ–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –º—ñ—Å—Ç–∏–ª–∞ –¥–∞—Ç–∞ –∞—Ç—Ä–∏–±—É—Ç id
// –°—Ç–≤–æ—Ä–∏ —Å–∫—Ä—ñ–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–≥—Ä–∞—à–Ω–æ—ó –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó, —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –º–æ–∂–ª–∏–≤–∏—Ö –≤–∏–≥—Ä–∞—à–Ω–∏—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –º–∞—Å–∏–≤—ñ combination.
// –î–ª—è –≤–∏–≤–æ–¥—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑–∞—Å—Ç–æ—Å—É–π –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É basiclightbox
// –ü—ñ—Å–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–º–æ–∂—Ü—è –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –ø—ñ–¥–≥–æ—Ç—É–π —ñ–≥—Ä–æ–≤–µ –ø–æ–ª–µ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –≥—Ä–∏

// const contentRef = document.querySelector(".js-content");
// const historyX = [];
// const historyO = [];
// const combination = [
//   [1, 2, 3],
//   [4, 5, 6],
//   [7, 8, 9],
//   [1, 4, 7],
//   [2, 5, 8],
//   [1, 5, 9],
//   [3, 5, 7],
//   [3, 6, 9],
// ];

// let player = "X";

// contentRef.addEventListener("click", handlerStep);
// contentRef.insertAdjacentHTML("afterbegin", createMarkup());
// function handlerStep(evt) {
//   if (evt.target.textContent !== "") {
//     return;
//   }

//   const id = Number(evt.target.dataset.id);
//   const minStepCount = 3;
//   let isWinner = false;

//   evt.target.textContent = player;

//   if (player === "X") {
//     historyX.push(id);
//     isWinner = historyX.length >= minStepCount ? checkWinner(historyX) : false;
//   } else {
//     historyO.push(id);
//     isWinner = historyO.length >= minStepCount ? checkWinner(historyO) : false;
//   }

//   if (isWinner) {
//     const instance = basicLightbox.create(`
//         <div class="box">
//             <h2>Player - ${player} is winner</h2>
//         </div>
//     `);
//     instance.show();
//     resetGame();
//     return;
//   }

//   const isDraw = [...contentRef.children].every(
//     (item) => item.textContent !== ""
//   );

// //   const isDrawSecond = historyX.length + historyO.length === 9

//   if (isDraw) {
//     const instance = basicLightbox.create(`
//         <div class="box">
//             <h2>üò∞ Is Drow</h2>
//         </div>
//     `);
//     instance.show();
//     resetGame();
//     return;
//   }
//   player = player === "X" ? "O" : "X";
// }

// function checkWinner(arr) {
//   return combination.some((item) => item.every((id) => arr.includes(id)));
// }

// function resetGame() {
//   contentRef.innerHTML = createMarkup();
//   player = "X";
//   historyO.splice(0);
//   historyX.splice(0);
// }
// function createMarkup() {
//   let markup = "";
//   for (let i = 1; i <= 9; i += 1) {
//     markup += `<li class="item" data-id="${i}"></li>`;
//   }

//   return markup;
// }
//

// –¶–µ –≤–∂–µ –ø—Ä–∞–∫—Ç–∏–∫–∞ –∑ –º–µ–Ω—Ç–æ—Ä–æ–º –≤ —Å—É–±–æ—Ç—É!
// –ü—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "SHOW ME", –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—å 
// –≤–∏–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è, —è–∫–µ –±—É–¥–µ–º–æ –≤–≤–æ–¥–∏—Ç–∏ –≤ —ñ–Ω–ø—É—Ç.

// goit tutor_14 14:38 (–¥–∞–Ω–æ —Ä–æ–∑–º—ñ—Ç–∫—É –Ω–∏–∂—á–µ)
//     <div>
//         <p class="taskTitle">–ó–ê–í–î–ê–ù–ù–Ø 1</p>
//         <button id="alertButton">SHOW ME</button>
//         <input id="alertInput" type="text" />
//     </div>
//
// const inputs = document.querySelector("#alertInput");
// const useBtn = document.querySelector("#alertButton");

// useBtn.addEventListener("click", onInputVelue);
// function onInputVelue() {
//     console.log(inputs.value);  
//  }
//(—Ü—ñ—î –æ–∫—Ä–µ–º–æ—é —Ñ—É–Ω–∫—Ü—ñ—î—é –≤–∏–∑–Ω–∞—á–∞—é —è–∫–µ –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏)- –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å —ñ–Ω–ø—É—Ç–∞, —è–∫–∞ –º—ñ—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —Å–∞–º–æ–≥–æ —ñ–º–ø—É—Ç–∞, —è–∫–µ –≤–≤—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)
// inputs.addEventListener("input", onInputVelue);
// console.dir(inputs); (–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å —ñ–Ω–ø—É—Ç–∞, —è–∫–∞ –º—ñ—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è —Å–∞–º–æ–≥–æ —ñ–º–ø—É—Ç–∞, —è–∫–µ –≤–≤—ñ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)
// function onInputVelue() {
//    return inputs.value  
// }
//console.log(onInputVelue());

// 
// –ü—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏" –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
// —Å–∏–º–≤–æ–ª–∏ –≤ —ñ–Ω–ø—É—Ç –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ —É –≤–∏–≥–ª—è–¥—ñ –∫—Ä–∞–ø–æ–∫ –∑–∞–º—ñ—Å—Ç—å –∑–≤–∏—á–∞–π–Ω–æ–≥–æ
// —Ç–µ–∫—Å—Ç—É, –∞ —Ç–∞–∫–æ–∂ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞–∑–≤—É –∫–Ω–æ–ø–∫–∏ –Ω–∞ "–ü–æ–∫–∞–∑–∞—Ç–∏", –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º—É
// –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∑–Ω–æ–≤—É –±—É–¥–µ–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ —Å–∏–º–≤–æ–ª–∏, –∞ –Ω–∞–∑–≤–∞ –∫–Ω–æ–ø–∫–∏ –∑–º—ñ–Ω–∏—Ç—å—Å—è
// // –Ω–∞ "–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏".

// <input id="passwordInput" type="text">
// <button id="passwordButton">–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏</button>

// const inputsUs = document.querySelector("#passwordInput");
// const useBtnClic = document.querySelector("#passwordButton");

// useBtnClic.addEventListener("click", onInputPassword);
// function onInputPassword() {
//     if (inputsUs.type === "text") {
//         useBtnClic.textContent = "SHOW"
//         inputsUs.type = "password"
//     } else {
//         useBtnClic.textContent = "Clouset"
//         inputsUs.type = "text"
//     }
    // if (inputsUs.type === "text") {
    //     useBtnClic.textContent = "–ü–æ–∫–∞–∑–∞—Ç–∏"
    //     inputsUs.type = "password"
    // } else {
    //     useBtnClic.textContent = "–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏"
    //     inputsUs.type = "text"
    // }   
//}


// –ö–Ω–æ–ø–∫–∞ "–ó–º–µ–Ω—à–∏—Ç–∏" –ø–æ–≤–∏–Ω–Ω–∞ –∑–º–µ–Ω—à—É–≤–∞—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç –Ω–∞ 10 –ø—ñ–∫—Å–µ–ª—ñ–≤.
// –ö–Ω–æ–ø–∫–∞ "–ó–±—ñ–ª—å—à–∏—Ç–∏" –ø–æ–≤–∏–Ω–Ω–∞ –∑–±—ñ–ª—å—à—É–≤–∞—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç –Ω–∞ 10 –ø—ñ–∫—Å–µ–ª—ñ–≤.

// const btnDecrcris = document.querySelector("#decrease");
// const btnIncrease = document.querySelector("#increase");
// const box = document.querySelector("#box");
// btnDecrcris.addEventListener("click", onbtDecrcrisClick );
// btnIncrease.addEventListener("click", onbtnIncreaseClick );

// // console.dir(box);
// function onbtDecrcrisClick() {
//     box.style.width = `${box.offsetWidth - 10}px` 
//     box.style.height = `${box.offsetHeight - 10}px`
    
// }
//  function onbtnIncreaseClick() {
//     box.style.width = `${box.offsetWidth + 10}px` 
//     box.style.height = `${box.offsetHeight + 10}px`
//  }
// –ü—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É "Filter" –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ —Å–ø–∏—Å–∫—É –ø–æ–∑–Ω–∞—á–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.

// const form = document.querySelector(".checkboxForm");
// const list = document.querySelectorAll(".checkboxWrapper");
// const input = document.querySelector("#checkbox1");
// form.addEventListener("submit", onFormSubmit);
// // console.dir(input);
// // checked
// function onFormSubmit(event) {
//     event.preventDefault()
//   const filtretlist =  [...list].filter(item => item.lastElementChild.checked);
//   filtretlist.forEach(element => element.remove() ); 
// }

// –ù–∞–≤–µ–¥–µ–Ω–æ —Å–ø–∏—Å–æ–∫ –ª—é–¥–µ–π. –ó—Ä–æ–±–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó (–ø–æ—à—É–∫—É) –∑–∞ —ñ–º'—è–º –∞–±–æ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º.
//
// const input = document.querySelector(".contactsFilter");
// const uls = document.querySelector(".contacts");
// input.addEventListener("input", onChenge);

// function onChenge() {
//     const value = input.value.toLowerCase();
//     const filterlist = [...uls.children].filter(ev => ev.textContent.toLowerCase().includes(value))
//     uls.innerHTML = "";
//     uls.append(...filterlist)
// }

//  –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞—á–∞ –ø–æ–¥—ñ–π –Ω–∞ –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç 
// –û—Ç—Ä–∏–º–∞–π –∫–æ–ª—ñ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∞ –ø–æ —è–∫–æ–º—É –±—É–ª–æ –∑–¥—ñ–π—Å–Ω–µ–Ω–æ –∫–ª—ñ–∫

// const container = document.querySelector('.js-container');

//[...container.children].forEach((box) => {
//   box.addEventListener('click', handlerGetColor)
// })

// function handlerGetColor(evt){
//   const color = evt.currentTarget.dataset.color;
// console.log(color)
// }
// 
